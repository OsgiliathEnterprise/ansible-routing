---
# tasks file for docker
- name: firewalld | start
  systemd:
    name: firewalld
    state: started
    enabled: true
  become: true

- name: containerization | create directory
  file:
    path: "{{ ansible_containerization_configuration_folder }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: ansible-volumes | install prerequisite
  package:
    name: xfsprogs
    state: present
  become: true

- name: containerization | check docker volume is formatted in xfs
  shell: "xfs_info {{ ansible_containerization_docker_mountpoint }} | grep -c 'ftype=1'"
  become: yes
  register: mountedxfs
  ignore_errors: true
  changed_when: no

- name: containerization | copy filesystem driver
  copy:
    src: daemon.json
    dest: "{{ ansible_containerization_daemon_configuration_file }}"
    owner: root
    group: root
    mode: 0640
  become: true
  notify: containerization | restart service
  when: not mountedxfs is failed

- name: containerization | copy execution driver
  copy:
    src: exec-daemon.json
    dest: "{{ ansible_containerization_daemon_configuration_file }}"
    owner: root
    group: root
    mode: 0640
  become: true
  notify: containerization | restart service
  when: mountedxfs is failed

- import_role:
    name: geerlingguy.docker
  become: true

- name: ansible-volumes | install prerequisite
  package:
    name: python3-docker
    state: present
  become: true

- name: containerization | start
  systemd:
    name: docker
    state: started
    enabled: true
  become: true

- name: containerization | add docker0 interface to public firewall zone
  include_role:
    name: tcharl.ansible_routing
  vars:
    firewalld_zones:
      - name: "{{ ansible_containerization_firewall_zone }}"
        nics:
          - "{{ ansible_containerization_docker_network_interface }}"
    virtual_hosts: []
